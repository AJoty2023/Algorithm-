#include <iostream>
using namespace std;

class Complex {
public:
    int real, imag;

    // Constructor to initialize the complex number
    Complex(int r = 0, int i = 0) : real(r), imag(i) {}

    // Overload the + operator
    Complex operator+(const Complex &other) {
        return Complex(real + other.real, imag + other.imag);
    }

    // Overload the << operator
    friend ostream& operator<<(ostream &out, const Complex &c);
};

// Definition of the overloaded << operator
ostream& operator<<(ostream &out, const Complex &c) {
    out << c.real << "+i" << c.imag;
    return out;
}

int main() {
    int real1, imag1, real2, imag2;
    char plus, i;

    // Reading the first complex number
    cin >> real1 >> plus >> i >> imag1;
    Complex c1(real1, imag1);

    // Reading the second complex number
    cin >> real2 >> plus >> i >> imag2;
    Complex c2(real2, imag2);

    // Adding the complex numbers
    Complex c3 = c1 + c2;

    // Printing the result
    cout << c3 << endl;

    return 0;
}
